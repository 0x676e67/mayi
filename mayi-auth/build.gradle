plugins {
    id 'org.springframework.boot' version "${springbootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagerVersion}"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
ext {
    jwtVersion = "0.11.1"
}

dependencies {
    implementation project(':mayi-upms:mayi-upms-api')
    implementation project(':mayi-common:mayi-common-core')
    implementation project(':mayi-common:mayi-common-encrypt')
    implementation project(':mayi-common:mayi-common-component')
    implementation project(':mayi-common:mayi-common-security')
    implementation("io.jsonwebtoken:jjwt-api:${jwtVersion}")
    implementation("io.jsonwebtoken:jjwt-impl:${jwtVersion}")
    implementation("io.jsonwebtoken:jjwt-jackson:${jwtVersion}")
    implementation('com.github.whvcse:easy-captcha:1.6.2')
    implementation 'com.github.shalousun:common-util:1.9.2'
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-aop')
    implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'
    implementation 'org.springframework.cloud:spring-cloud-starter-security'
    implementation('org.springframework.security:spring-security-oauth2-jose')
    implementation("de.codecentric:spring-boot-admin-starter-client:${adminMonitorVersion}")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation ("org.springframework.boot:spring-boot-starter-validation:${springbootVersion}")
    implementation "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${nacosVersion}"
    implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:${nacosVersion}"
    implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config:${nacosVersion}"
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    implementation("org.springframework.cloud:spring-cloud-starter-openfeign")
    implementation('org.springframework.boot:spring-boot-configuration-processor')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation('org.springframework.security:spring-security-test')
    implementation('org.springframework.boot:spring-boot-test')
    runtimeOnly("mysql:mysql-connector-java:${mysqlConnectorVersion}")

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
